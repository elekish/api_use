{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "ea77e380",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2024-05-01T17:57:37.604731Z",
     "iopub.status.busy": "2024-05-01T17:57:37.604245Z",
     "iopub.status.idle": "2024-05-01T17:57:38.647431Z",
     "shell.execute_reply": "2024-05-01T17:57:38.645969Z"
    },
    "papermill": {
     "duration": 1.052288,
     "end_time": "2024-05-01T17:57:38.650327",
     "exception": false,
     "start_time": "2024-05-01T17:57:37.598039",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# This Python 3 environment comes with many helpful analytics libraries installed\n",
    "# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n",
    "# For example, here's several helpful packages to load\n",
    "\n",
    "import numpy as np # linear algebra\n",
    "import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n",
    "\n",
    "# Input data files are available in the read-only \"../input/\" directory\n",
    "# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n",
    "\n",
    "import os\n",
    "for dirname, _, filenames in os.walk('/kaggle/input'):\n",
    "    for filename in filenames:\n",
    "        print(os.path.join(dirname, filename))\n",
    "\n",
    "# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n",
    "# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "956a1033",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-01T17:57:38.661083Z",
     "iopub.status.busy": "2024-05-01T17:57:38.660510Z",
     "iopub.status.idle": "2024-05-01T17:57:38.748864Z",
     "shell.execute_reply": "2024-05-01T17:57:38.747558Z"
    },
    "papermill": {
     "duration": 0.097202,
     "end_time": "2024-05-01T17:57:38.752054",
     "exception": false,
     "start_time": "2024-05-01T17:57:38.654852",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import requests\n",
    "api_key = 'e409fa3d804c41ae8e530f8e307ed513'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "364543e7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-01T17:57:38.762678Z",
     "iopub.status.busy": "2024-05-01T17:57:38.762197Z",
     "iopub.status.idle": "2024-05-01T17:57:38.767516Z",
     "shell.execute_reply": "2024-05-01T17:57:38.766199Z"
    },
    "papermill": {
     "duration": 0.01365,
     "end_time": "2024-05-01T17:57:38.770237",
     "exception": false,
     "start_time": "2024-05-01T17:57:38.756587",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "address = \"coffee house, kolkata, india\"#input('your address here')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "c223f8f4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-01T17:57:38.780083Z",
     "iopub.status.busy": "2024-05-01T17:57:38.779701Z",
     "iopub.status.idle": "2024-05-01T17:57:39.800148Z",
     "shell.execute_reply": "2024-05-01T17:57:39.798887Z"
    },
    "papermill": {
     "duration": 1.029247,
     "end_time": "2024-05-01T17:57:39.803458",
     "exception": false,
     "start_time": "2024-05-01T17:57:38.774211",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "url = f'https://api.geoapify.com/v1/geocode/search?text={address}&apiKey={api_key}'\n",
    "geocode_response = requests.get(url).json()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "735137e4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-01T17:57:39.813719Z",
     "iopub.status.busy": "2024-05-01T17:57:39.813224Z",
     "iopub.status.idle": "2024-05-01T17:57:39.819854Z",
     "shell.execute_reply": "2024-05-01T17:57:39.818354Z"
    },
    "papermill": {
     "duration": 0.014986,
     "end_time": "2024-05-01T17:57:39.822670",
     "exception": false,
     "start_time": "2024-05-01T17:57:39.807684",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "location = geocode_response['features'][0]['geometry']['coordinates']\n",
    "lng, lat = location[0], location[1]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "78228482",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-01T17:57:39.832880Z",
     "iopub.status.busy": "2024-05-01T17:57:39.832421Z",
     "iopub.status.idle": "2024-05-01T17:57:43.487003Z",
     "shell.execute_reply": "2024-05-01T17:57:43.486033Z"
    },
    "papermill": {
     "duration": 3.664307,
     "end_time": "2024-05-01T17:57:43.491067",
     "exception": false,
     "start_time": "2024-05-01T17:57:39.826760",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Restaurants:\n",
      "Aminia\n",
      "Arsalan Restaurant & Caterar\n",
      "Byepass Dhaba\n",
      "Bhojohori Manna\n",
      "Arsalan Restaurant\n",
      "The Accord\n",
      "Momo I Am\n",
      "KRAZEE KULCHA\n",
      "Aminia Restaurant\n",
      "Aminia Restaurant - Rajarhat\n",
      "Barbeque Nation\n",
      "The Bengal Rowing Club (BRC)\n",
      "Tandoor Park\n",
      "Tym Pass\n",
      "Kasturi Restaurant\n",
      "Banzara A. C. Restaurant\n",
      "Oh! Calcutta\n",
      "MOMO PLAZA\n",
      "Mission Vegetarian Cafe\n",
      "New Arafat Restaurant & Cat\n"
     ]
    }
   ],
   "source": [
    "restuarant_url = f'https://api.geoapify.com/v2/places?categories=catering.restaurant&filter=circle:{lng},{lat},10000&apiKey={api_key}'\n",
    "restuarant_response = requests.get(restuarant_url).json()\n",
    "\n",
    "# Initialize an empty dictionary for restaurants\n",
    "restaurants = {}\n",
    "\n",
    "print('Restaurants:')\n",
    "for place in restuarant_response['features']:\n",
    "    if 'name' in place['properties']:\n",
    "        print(place['properties']['name'])\n",
    "    # Store the restaurant names in the dictionary\n",
    "        restaurants[place['properties']['name']] = place['properties']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "32b36bab",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-01T17:57:43.505772Z",
     "iopub.status.busy": "2024-05-01T17:57:43.504994Z",
     "iopub.status.idle": "2024-05-01T17:58:12.555425Z",
     "shell.execute_reply": "2024-05-01T17:58:12.554037Z"
    },
    "papermill": {
     "duration": 29.061883,
     "end_time": "2024-05-01T17:58:12.558848",
     "exception": false,
     "start_time": "2024-05-01T17:57:43.496965",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Religion attractions:\n",
      "Dakshineswar Kali Hindu Temple\n",
      "Jagat Mukherjee Park Sadharan Durgotsab\n",
      "Kalighat Kali Temple\n",
      "Birla Mandir\n",
      "Saint Thomas' Catholic Church\n",
      "Nakhoda Mosque\n",
      "Swetamber Dadaji's Jain Temple\n",
      "Mother Teresa Church\n",
      "Old Mission Church\n",
      "Tipu Sultan Mosque\n",
      "Maghen David Synagogue\n",
      "Sitala Mandir\n",
      "Shibaloy\n",
      "Pagoda\n",
      "Belgachia Bari Masjid\n",
      "Belgachia Choti Masjid\n",
      "Saint Paul's Anglican Cathedral\n",
      "Mahanirban Math\n",
      "Church\n",
      "\n",
      "Camping attractions:\n",
      "\n",
      "Beach attractions:\n",
      "\n",
      "Entertainment attractions:\n",
      "Star Theatre\n",
      "ভিক্টোরিয়া মেমোরিয়াল হল\n",
      "Science City\n",
      "Birla Industrial & Technological Museum (bitm)\n",
      "Nazrul Tirtha\n",
      "Centre for International Modern Art\n",
      "Ahuja Museum for Arts\n",
      "ভারতীয় জাদুঘর\n",
      "Eastern Railway Museum\n",
      "Birla Planetarium\n",
      "Birla Industrial & Technological Museum\n",
      "Chaplin Theatre\n",
      "Rabindra Sadan\n",
      "Priya Cinema\n",
      "Nandan West Bengal Film Centre\n",
      "INOX Cinema\n",
      "Paradise Cinema\n",
      "PVR Diamond Plaza\n",
      "Kolkata Police Museum\n",
      "\n",
      "Natural attractions:\n",
      "DVC Headquarters, Kolkata\n",
      "Rabindra Sarobar\n",
      "Lal Dighi\n",
      "Gol Talab\n",
      "The Great Banyan Tree\n",
      "Santragachi Lake\n",
      "Dhakuria Lake\n",
      "Prain Lake\n",
      "Kings Lake\n",
      "Leram Lake\n",
      "Subhash Sarobar\n",
      "Central Park Lake\n",
      "Hooghly\n",
      "Chingrighata Fishing Lake\n",
      "Captain Bherry\n",
      "Musical Fountain\n",
      "Lotus Pond\n",
      "Ganguly Pukur\n",
      "Asim Pond\n",
      "Bengal Lamp Pukur\n",
      "\n",
      "Tourism attractions:\n",
      "Victoria Memorial Hall\n",
      "Tagore's House\n",
      "Tala Prattoy - Durga Puja Art\n",
      "Fort William\n",
      "Howrah Bridge\n",
      "Lascar War Memorial\n",
      "Shaheed Minar\n",
      "Job Charnock’s Mausoleum\n",
      "Amar Mishtanna Bhandar\n",
      "Palace of Maharaja Barddhaman\n",
      "Geological Survey Of India\n",
      "Lake Town Clock Tower\n",
      "Rajib Gandhi Statue\n",
      "James Pricep Ghat Memorial\n",
      "Statue of Bholsnsth Chskraborty\n",
      "Clive House\n",
      "Ghosh house\n",
      "Indira Ghandi Statue\n",
      "Mother House (Missionaries of Charity)\n",
      "\n",
      "Ski attractions:\n",
      "\n",
      "Sport attractions:\n",
      "Eden Gardens\n",
      "Vivekananda Yuba Bharati Krirangan\n",
      "Netaji Subhash Chandra Bose Indoor Stadium\n",
      "Mohammedan Sporting Ground\n",
      "Kolkata Race Course\n",
      "Calcutta Cricket and Football Club\n",
      "Rabindra Sarobar Stadium\n",
      "East Bengal Ground\n",
      "Mohun Bagan Ground\n",
      "Kasia Bagan Maidan\n",
      "Kasia Bagan Ground\n",
      "Subhasnagar Stadium\n",
      "Kolkata Basanta Utsav Ground (কলকাতা বসন্ত উৎসব প্রাঙ্গন)\n",
      "Sailen Manna Stadium\n",
      "Debonair Multy Gym & Swimming Club\n",
      "UFC GYM\n",
      "East Calcutta District Sports Council\n",
      "Gitanjali Stadium\n",
      "Mohun Bagan Atheletic Club\n",
      "Shyambazar Tennis Club\n",
      "\n",
      "Administrative attractions:\n",
      "Sonarpur\n",
      "South 24 Parganas District\n",
      "West Bengal\n",
      "Thakurpukur Maheshtala\n",
      "Barrackpore\n",
      "Bidhannagar\n",
      "Kolkata District\n",
      "Bally Jagachha\n",
      "Domjur\n",
      "Sankrail\n",
      "Serampur Uttarpara\n",
      "North 24 Parganas District\n",
      "Howrah District\n",
      "Hooghly District\n",
      "Kolkata\n",
      "Haora\n",
      "India\n",
      "Ultadanga\n",
      "\n",
      "Pet.dog_park attractions:\n",
      "\n",
      "Man_made attractions:\n",
      "Tala tank\n",
      "Bangal Babu Bridge\n",
      "Nibedita Setu\n",
      "Vivekananda Setu\n",
      "Tank No. 3\n",
      "TANK No 14\n",
      "Tank No 12\n",
      "Tank No 10\n",
      "Tank No. 4\n",
      "Tank No . 8\n",
      "Tank No . 17\n",
      "Tank No. 16\n",
      "Water Tank\n",
      "Water Treatment Facility\n",
      "Jeti Ghat\n",
      "TV Tower\n",
      "Bally Bridge\n",
      "Majherhat Bridge\n",
      "\n",
      "Leisure attractions:\n",
      "Victoria Memorial Garden\n",
      "Acharya Jagadish Chandra Bose Indian Botanic Garden\n",
      "Millennium Park\n",
      "Mohor Kunja\n",
      "Rabindranagar Children'S Park\n",
      "Deshapriya Park\n",
      "Alipore Zoo\n",
      "College Square Park\n",
      "Park Circus Maidan\n",
      "Sahid Nagar Playground\n",
      "Viveknagar Kalibari Math\n",
      "Aaaikatan Playground\n",
      "Maddox Square\n",
      "Harish Park\n",
      "National Library\n",
      "Shibtala Math\n",
      "Pravash Sarkar Park\n",
      "Sibaji Sanjha park\n",
      "Dr. K. K. Dutta Memorial Playground\n",
      "\n",
      "Heritage attractions:\n",
      "Esplanade Mansions\n",
      "Raj Bhavan\n",
      "\n",
      "Education.library attractions:\n",
      "National Library (Main Building)\n",
      "State Central Library\n",
      "Kolkata Police Library\n",
      "Belgachia Muslim Library\n",
      "Just Books\n",
      "school library\n",
      "Ramanujan Central Library\n",
      "Shyamal Basu Smriti Gronthagar\n",
      "Dhakuria Public Library\n",
      "University Library\n",
      "Gita Bhavan\n",
      "Commercial Library of India\n",
      "Ram mohan Library\n",
      "\n",
      "Activity attractions:\n",
      "Biswa Bangla Mela Prangan\n",
      "CII--Suresh Neotia Center of Excellence For Leadership\n",
      "Nirman Community Center\n",
      "BA Block Community Hall\n",
      "Calcutta Sports Association\n",
      "Dakshin Kolkata Sangha\n",
      "SANGRAMI\n",
      "Ordinance Club\n",
      "community center brs 10\n",
      "BAGMARI PRAGATI SANGHA\n",
      "BORC\n",
      "Gobra Young Athletic Club\n",
      "GD Community Center\n",
      "beniapukur thana masjid \n",
      "Emmanuel Ministries Calcutta\n",
      "BF block Residents' Association\n",
      "Tollygunge place club\n",
      "The Bengal Rowing Club\n",
      "Vidya\n",
      "Kankurgachi community hall\n"
     ]
    }
   ],
   "source": [
    "\n",
    "\n",
    "categories = ['religion','camping','beach','entertainment','natural','tourism','ski','sport','administrative','pet.dog_park','man_made','leisure','heritage','education.library','activity']\n",
    "\n",
    "# Initialize an empty dictionary for attractions\n",
    "attractions = {}\n",
    "\n",
    "for category in categories:\n",
    "    attractions_url = f'https://api.geoapify.com/v2/places?categories={category}&filter=circle:{lng},{lat},10000&apiKey={api_key}'\n",
    "    attractions_response = requests.get(attractions_url).json()\n",
    "    \n",
    "\n",
    "    print(f\"\\n{category.capitalize()} attractions:\")\n",
    "    for place in attractions_response['features']: \n",
    "        if 'name' in place['properties'] and place['properties']['name'] not in attractions:\n",
    "            print(place['properties']['name'])\n",
    "        # Store the attraction names in the dictionary\n",
    "            attractions[place['properties']['name']] = place['properties']\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "7e821aa0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-01T17:58:12.572859Z",
     "iopub.status.busy": "2024-05-01T17:58:12.572345Z",
     "iopub.status.idle": "2024-05-01T17:58:14.027705Z",
     "shell.execute_reply": "2024-05-01T17:58:14.026213Z"
    },
    "papermill": {
     "duration": 1.465852,
     "end_time": "2024-05-01T17:58:14.030631",
     "exception": false,
     "start_time": "2024-05-01T17:58:12.564779",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Directions:\n",
      "{'text': 'Drive north.'}\n",
      "{'text': 'Your destination is on the left.'}\n"
     ]
    }
   ],
   "source": [
    "# Ask the user for the place they want to visit\n",
    "destination_name = \"Gobra Young Athletic Club\"#input('Please enter the name of the place you want to visit: ')\n",
    "\n",
    "# Check if the place is in the restaurants or attractions dictionary\n",
    "if destination_name in restaurants:\n",
    "    destination = restaurants[destination_name]\n",
    "elif destination_name in attractions:\n",
    "    destination = attractions[destination_name]\n",
    "else:\n",
    "    destination={};\n",
    "    print(\"Sorry, the place you entered is not in the list of restaurants or attractions.\")\n",
    "    exit()\n",
    "url1 = f'https://api.geoapify.com/v1/geocode/search?text={address}&apiKey={api_key}'\n",
    "geocode_response1 = requests.get(url1).json()\n",
    "\n",
    "destination_name = geocode_response1['features'][0]['geometry']['coordinates']\n",
    "lng1, lat1 = destination_name[0], destination_name[1]\n",
    "# Get the coordinates of the destination\n",
    "#destination_coordinates = destination['centroid']['coordinates']\n",
    "\n",
    "\n",
    "if destination!={}:\n",
    "    transport_mode = \"bus\"#input('Please enter your preferred mode of transport (car, pedestrian, bicycle,bus,metro): ')\n",
    "\n",
    "# Get the route from the user's location to the destination\n",
    "    route_url = f'https://api.geoapify.com/v1/routing?waypoints={lat},{lng}|{lat1},{lng1}&mode={transport_mode}&apiKey={api_key}'\n",
    "    route_response = requests.get(route_url).json()\n",
    "\n",
    "# Print the directions\n",
    "    print('Directions:')\n",
    "    for leg in route_response['features'][0]['properties']['legs']:\n",
    "        for step in leg['steps']:\n",
    "            print(step['instruction'])"
   ]
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [],
   "dockerImageVersionId": 30698,
   "isGpuEnabled": false,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.13"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 40.413053,
   "end_time": "2024-05-01T17:58:14.559056",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2024-05-01T17:57:34.146003",
   "version": "2.5.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
